# Default values for adapt.

# This determines whether to deploy the UA product
deployProduct: true
# deployProduct: false

# Product settings
licenseServer:
  # This defines the container image
  # more information: https://kubernetes.io/docs/concepts/containers/images/
  image:
    name: adapt/license-server
    # This sets the pull policy for images.
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ''

  # Config settings
  hostname: ''
  licenseFile: /opt/adapt/etc/LicSer.lic
  logFile: /var/log/adapt/cdplicser.log

  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: ls-license
  #   secret:
  #     secretName: ls-license
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: ls-license
  #   mountPath: /opt/adapt/etc/LicSer.lic
  #   subPath: LicSer.lic
  #   readOnly: true

ua:
  # This defines the container image
  # more information: https://kubernetes.io/docs/concepts/containers/images/
  image:
    name: adapt/ua
    # This sets the pull policy for images.
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ''

  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: ua-license
  #   secret:
  #     secretName: ua-license
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: ua-license
  #   mountPath: /opt/adapt/etc/adeptua.lic
  #   subPath: adeptua.lic
  #   readOnly: true

# Secrets for pulling an image from a private repository
# more information: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []

# This is to override the chart name.
nameOverride: ''
fullnameOverride: ''

# This will set the replicaset count
# more information: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This section builds out the service account
# more information: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ''

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service
# more information: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type
  # more information: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports
  # more information: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 5000

# This block is for setting up the ingress
# for more information: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ''
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Sets up the liveness and readiness probes
# more information: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  tcpSocket:
    port: 5000
readinessProbe:
  tcpSocket:
    port: 5000

# This section is for setting up autoscaling
# more information: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
